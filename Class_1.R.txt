
z <- ts(matrix(rnorm(300), 100, 3), start = c(1961, 1), frequency = 12)
# class(z)
# head(z) # as "matrix"
# plot(z)
plot(z[,1], main="IID", type="b")
# plot(z, plot.type = "single", lty = 1:3)

#U.S. company Johnson  & Johnson,

load("tsa3.rda")  # the file tsa3.rda is yor directory
plot(jj, type="o", ylab="Quarterly Earnings per Share", main="Johnson & Johnson quarterly earnings per share,
 84 quarters, 1960-I to 1980-IV")


# random walk 

set.seed(154) # so you can reproduce the results
w = rnorm(200,0,1); x = cumsum(w) # two commands in one line
wd = w +.2; xd = cumsum(wd)
plot.ts(xd, ylim=c(-5,55), main="random walk")
lines(x); lines(.2*(1:200), lty="dashed")

# 
plot(gtemp, type="o", ylab="Global Temperature Deviations",
     main="Global Temperature Deviations")




# Signal in Noise
cs = 2*cos(2*pi*1:500/50 + .6*pi)
w = rnorm(500,0,1)
par(mfrow=c(3,1), mar=c(3,2,2,1), cex.main=1.5)
plot.ts(cs, main=expression(2*cos(2*pi*t/50+.6*pi)))
plot.ts(cs+w, main=expression(2*cos(2*pi*t/50+.6*pi) + N(0,1)))
plot.ts(cs+5*w, main=expression(2*cos(2*pi*t/50+.6*pi) + N(0,25)))

par(mfrow=c(1,1))
milk <- read.table("milk.dat")
Milk=ts(milk, frequency = 12, start = c(1962, 1))
plot(Milk, main="Monthly milk production: pounds per cow. Jan 62 – Dec 75")


plot(nhtemp, main = "Lag plot of New Haven temperatures")
plot(nhtemp, lag(nhtemp, 1), cex = .8, col = "blue",
     main = "Lag plot of New Haven temperatures")

# plot(nhtemp, lag(nhtemp, 1))

# read data from a csv file
wine <- read.csv("wine_plain_head.csv",header = T, sep = ";")
str(wine)
Rwine <- ts(wine[[4]], frequency = 12, start = c(1980,1))
plot(Rwine,main="The Australian red wine sales, Jan. ‘80 – July ‘96." )
# str(Rwine)

# data in a library 
library(forecast)
data(wineind)
# Australian total wine sales by wine makers in bottles <= 1 litre.
# Jan 1980 -- Aug 1994.
plot(wineind, main="Wine Index")

# str(wineind)


plot(speech, main="Speech recording sampled at 10,000 points per second with n = 1020 points")

plot(nyse, ylab="NYSE Returns",
     main="Daily returns (or percent change) of the New York Stock Exchange
     crash of October 19, 1987")


# Seismic recording station
par(mfrow=c(2,1))
plot(EQ5, main="Earthquake")
plot(EXP6, main="Explosion")

# Monthly 453 months
# SOI measures changes in air pressure, 
# related to sea surface temperatures in the central Pacific Ocean
# Recruitment series (number of new fish)
par(mfrow = c(2,1)) # set up the graphics
plot(soi, ylab="", xlab="", main="Southern Oscillation Index")
plot(rec, ylab="", xlab="", main="Recruitment, monthly")

par(mfrow=c(1,1))

#######################################
#############################################


# R packeges
#  Data sets in package : `astsa', `forecast', `tseries':
z <- ts(matrix(rnorm(300), 300, 3), start = c(1961, 1), frequency = 12)
# class(z)
# head(z) # as "matrix"
# plot(z)
plot(z[,1], main="IID", type="b")
ma5 = filter(z[,1], sides=2, rep(1,5)/5)
plot(ma5)
ma53 = filter(z[,1], sides=2, rep(1,53)/53)
plot(ma53)

par(mfrow=c(3,1))
plot(z[,1], main="IID", type="b")
plot(ma5)
plot(ma53)

# random walk 
par(mfrow=c(1,1))
set.seed(154) # so you can reproduce the results
w = rnorm(200,0,1); x = cumsum(w) # two commands in one line
wd = w +.2; xd = cumsum(wd)
plot.ts(xd, ylim=c(-5,55), main="random walk")
lines(x); lines(.2*(1:200), lty="dashed")


# Signal in Noise
cs = 2*cos(2*pi*1:500/50 + .6*pi)
w = rnorm(500,0,1)
par(mfrow=c(3,1), mar=c(3,2,2,1), cex.main=1.5)
plot.ts(cs, main=expression(2*cos(2*pi*t/50+.6*pi)))
plot.ts(cs+w, main=expression(2*cos(2*pi*t/50+.6*pi) + N(0,1)))
plot.ts(cs+5*w, main=expression(2*cos(2*pi*t/50+.6*pi) + N(0,25)))

par(mfrow=c(1,1))
ma53s = filter(cs+5*w, sides=2, rep(1,50)/50)
plot(ma53s)

